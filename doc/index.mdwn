[[!sidebar content="""

[[!img tchpc_icon128x128.png link=no]]

* [[install]]
* [[walkthrough]]
* [[todo]]
* [[contact]]
* [[copyright]]

"""]]

## About

cports is a collection of Makefiles and macros for semi-automatic
builds of various pieces of software. It also uses
[environment-modules](http://sourceforge.net/projects/modules/) to allow
us to have multiple versions of software installed. Users can select
which versions they want to use with the module system.

cports primarily acts as documentation on how to build (some times
pretty complicated) pieces of software, so the stack can be reproduced
on different systems with some poking from the sysadmin.

## Why fork cports

 - Needed more than just one version of gcc, intel, pgi builds of
   software
 - Needed more control with being able to add packages
 - Needed more variables put into the modulefiles
 - Needed repeatable and documented methods of installing libraries
   and applications
 - Didn't care too much about generating portable objects, and since
   it's dervived from a derived piece of work it just makes life
   easier.
 - Why not use Gentoo, NetBSD ports, packaging system XYZ?
   - most of the other systems are not as easily hackable as just
     makefiles
   - don't allow multiple verisons of software installed
 - Wanted to extend the modulefile generation targets to include these
   variables
  - `INCLUDE_PATH` 
  - `CPLUS_INCLUDE_PATH` 
  - `C_INCLUDE_PATH` 
  - `LD_LIBRARY_PATH`
  - `LIBRARY_PATH`
  - `LD_RUN_PATH`
  - `PKG_CONFIG_PATH`
  - `PYTHONPATH` (this needs tweaking)
  - `INSERT_MODULEFILE_CONFLICTS` (conflict or not?)
  - `MODULEFILE_CONFLICTS` (conflict package with itself)
  - `DO_RUN_TESTS` (testing of packages)

##  What cports doesn't do 

 - It doesn't generate portable binaries
 - Provide good documentation on the modifications TCHPC has made
 - Support for people who use this
 - Dependancy and conflict checking of the packages, the admin who is
   writing the package will need to do this
 - Work with non-gnu based tools (it's a fork and the original authors
   used and based everything on gnu make etc...)

There is also an [[old changelog]] with some of the initial changes that were made.

## Misc Notes

 - [[packages]]

## Key packages to install

Some packages that tend to get installed quite early and quickly.

- R
- Octave
- Emacs
- topgit/git/gitflow
- Grace
- OpenMPI
- Scipy/Numpy
- Mercurial
- Fossil
